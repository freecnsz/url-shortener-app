version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: linkhub-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-linkhub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-linkhub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: linkhub-redis
    command: redis-server --databases 16
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Web API
  web-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: linkhub-api
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-linkhub}"
      REDIS_HOST: "redis"
      REDIS_PORT: "${REDIS_PORT:-6379}"
      REDIS_PASSWORD: "${REDIS_PASSWORD:-}"
      REDIS_DB: "${REDIS_DB:-0}"
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      BASE_URL: ${BASE_URL:-http://localhost:3000}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
