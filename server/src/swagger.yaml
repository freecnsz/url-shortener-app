openapi: 3.0.0
info:
  title: URL Shortener API
  version: 1.0.0
  description: Simple URL Shortener API documentation
servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          minLength: 3
          description: Username for the account
          example: john_doe
        email:
          type: string
          format: email
          description: User email address
          example: john@example.com
        password:
          type: string
          minLength: 6
          description: User password (minimum 6 characters)
          example: "123456"
        fullName:
          type: string
          description: Full name of the user (optional)
          example: John Doe
    
    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
          example: "1"
        username:
          type: string
          example: john_doe
        email:
          type: string
          example: john@example.com
        fullName:
          type: string
          nullable: true
          example: John Doe
        createdAt:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-15T10:30:00.000Z"
    
    ApiSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          type: object
    
    ApiErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Operation failed"
        data:
          type: object
          nullable: true
          example: null
    

    
    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ApiErrorResponse'
              - type: object
                properties:
                  message:
                    example: "Validation failed"
    
    NotImplemented:
      description: Feature not implemented yet
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ApiErrorResponse'
              - type: object
                properties:
                  message:
                    example: "Not implemented yet"
    
    InvalidCredentials:
      description: Invalid credentials
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ApiErrorResponse'
              - type: object
                properties:
                  message:
                    example: "Invalid credentials"

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "User created successfully"
                      data:
                        $ref: '#/components/schemas/CreateUserResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
  
  /api/auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "Login successful"
                      data:
                        $ref: '#/components/schemas/LoginResponse'
        '401':
          $ref: '#/components/responses/InvalidCredentials'
        '501':
          $ref: '#/components/responses/NotImplemented'
  
  /api/auth/logout:
    post:
      summary: Logout user
      tags:
        - Authentication
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "Logout successful"
                      data:
                        example: null
        '501':
          $ref: '#/components/responses/NotImplemented'
  
  /api/auth/refresh:
    post:
      summary: Refresh access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "Token refreshed successfully"
                      data:
                        $ref: '#/components/schemas/RefreshTokenResponse'
        '401':
          $ref: '#/components/responses/InvalidCredentials'
        '501':
          $ref: '#/components/responses/NotImplemented'